@model List<PROG7312_POE.Models.eventTBL>

@{
    ViewData["Title"] = "View Events";
    var cats = (IEnumerable<string>)ViewBag.Categories ?? Enumerable.Empty<string>();
    var dates = (IEnumerable<string>)ViewBag.Dates ?? Enumerable.Empty<string>();

    //chat gpt assisted me with the viewbag code
    var selCat = (string)ViewBag.SelectedCategory ?? "";
    var selDate = (string)ViewBag.SelectedDate ?? "";
    var ann = (IEnumerable<PROG7312_POE.Models.announcementTBL>)(ViewBag.Announcements ?? new List<PROG7312_POE.Models.announcementTBL>());
}

<head>
    <style>
        body {
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
            color: #fff;
        }

        .header {
            background-color: rgba(0, 191, 255, 0.15);
            padding: 20px;
            text-align: center;
            font-size: 32px;
            font-weight: bold;
            color: #00bfff;
            border-radius: 20px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.4);
            margin: 20px auto;
            max-width: 90%;
        }

        .button-wrap {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 90%;
            margin: 10px auto 0;
            gap: 12px;
        }

        .create-btn, .link-btn {
            background-color: #00bfff;
            color: #fff;
            border: none;
            padding: 10px 16px;
            font-size: 15px;
            font-weight: 600;
            border-radius: 10px;
            cursor: pointer;
            transition: 0.2s ease;
            text-decoration: none;
            display: inline-block;
        }

            .create-btn:hover, .link-btn:hover {
                background-color: #009acd;
            }

        .filter-select {
            padding: 10px 12px;
            border-radius: 10px;
            border: 1px solid rgba(255,255,255,0.08);
            background-color: rgba(255,255,255,0.03);
            color: #fff;
            font-size: 14px;
            box-sizing: border-box;
            min-width: 180px;
        }

        .ann-content {
            opacity: .9;
        }

        .table-wrap {
            width: 90%;
            margin: 18px auto;
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 8px 20px rgba(0,0,0,0.5);
            min-width: 900px;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            vertical-align: middle;
        }

        th {
            background-color: rgba(0, 191, 255, 0.2);
            color: #00bfff;
            font-size: 15px;
            white-space: nowrap;
        }

        tr:nth-child(even) {
            background-color: rgba(255,255,255,0.03);
        }

        tr:hover {
            background-color: rgba(0,191,255,0.06);
        }

        .ann-section {
            max-width: 90%;
            margin: 16px auto 0;
            padding: 16px;
            border-radius: 16px;
            background: rgba(255,255,255,0.05);
            box-shadow: 0 8px 20px rgba(0,0,0,0.5);
        }

        .ann-section__header {
            font-size: 18px;
            font-weight: 700;
            color: #00bfff;
            margin-bottom: 10px;
        }
        .ann-wrap {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 12px;
        }

        .ann-card {
            background: rgba(255,255,255,0.05);
            border-radius: 14px;
            padding: 14px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.5);
        }

        .ann-title {
            color: #00bfff;
            font-weight: 700;
            margin: 0 0 6px 0;
            font-size: 18px;
        }

        .ann-content {
            opacity: .9;
        }
    </style>
</head>

<body>
    @* Announcements *@
    @if (ann.Any())
    {
        <div class="ann-section">
            <div class="ann-section__header">Announcements</div>

            <div class="ann-wrap">
                @foreach (var a in ann)
                {
                    <div class="ann-card">
                        <div class="ann-title">@a.Title</div>
                        <div class="ann-content">@a.Content</div>
                    </div>
                }
            </div>
        </div>
    }

    <div class="header">All Community Events</div>

	@*Search filters *@
    <div class="button-wrap">
        <form method="get" asp-controller="Events" asp-action="Events" style="display:flex; gap:12px; align-items:center; margin:0;">
            <select name="category" class="filter-select" onchange="this.form.submit()">
                <option value="">All categories</option>
                @foreach (var c in cats)
                {
                    <option value="@c" selected="@(selCat == c)">@c</option>
                }
            </select>

            <select name="date" class="filter-select" onchange="this.form.submit()">
                <option value="">All dates</option>
                @foreach (var d in dates)
                {
                    <option value="@d" selected="@(selDate == d)">@d</option>
                }
            </select>

            @if (!string.IsNullOrEmpty(selCat) || !string.IsNullOrEmpty(selDate))
            {
                <a href="@Url.Action("Events","Events")" class="create-btn" style="background:#666;">Reset</a>
            }
        </form>

        @* Buttons *@
        <div style="display:flex; gap:12px;">
            <a href="@Url.Action("UpcomingEvents", "Events")" class="link-btn">View Upcoming Events</a>
            <a href="@Url.Action("AddEvent", "Events")" class="create-btn">+ Create New Event</a>
        </div>
    </div>

	@*Success message for creating an event*@
    @if (TempData["SuccessMessage"] != null)
    {
        <div style="background-color: rgba(0, 255, 0, 0.18); color: #b7f7b7; padding: 12px; border-radius: 10px; margin: 12px auto 0; max-width:90%; text-align:center;">
            @TempData["SuccessMessage"]
        </div>
    }


    <div class="table-wrap">
        <table id="eventsTable" aria-describedby="events-list">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Date</th>
                    <th>Location</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.EventName</td>
                            <td>@item.EventCategory</td>
                            <td>@item.EventDate.ToString("yyyy-MM-dd")</td>
                            <td>@item.Location</td>
                            <td>@item.Description</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" style="text-align:center;">No events found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>
